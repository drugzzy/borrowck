// let mut p: &0 Foo;
// p = &1 foo; // point A
// if {
//     p = &2 bar; // point B
//     &mut foo; // point C
// }
// *p // point D

struct Foo { }

let foo: Foo;
let bar: Foo;
let p: &'p Foo;

block START {
    p = &'foo1 foo;
    goto B C;
}

block B {
    use(p);
    ;
    p = &'bar bar;
    goto C;
}

block C {
    use(p);
}

assert B/1 not in 'foo1;
assert C/0 in 'foo1;
assert C/0 in 'bar;
assert C/1 not in 'foo1;
assert C/1 not in 'bar;

assert p not live at START;
assert p live at B;
assert p live at C;